"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _types = require("../types");
var _actionCreators = _interopRequireDefault(require("../actionCreators.js"));
var _shuffle = _interopRequireDefault(require("../../utils/shuffle.js"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
let playlistUnshuffled = [];
const shuffler = store => next => action => {
  let state = store.getState();
  if (action.type === _types.ActionTypes.SHUFFLE && state.playlist.length > 1) {
    const playlist = state.playlist;
    const currentIndex = state.currentTrack;
    const currentTrack = playlist[state.currentTrack]; // current track

    if (action.payload.shuffle) {
      playlistUnshuffled = [...state.playlist]; // cache playlist

      let upper = playlist.slice(0, currentIndex);
      let lower = playlist.slice(currentIndex + 1, playlist.lenth);
      let withoutCurrent = upper.concat(lower);
      withoutCurrent = (0, _shuffle.default)(withoutCurrent);

      // update playlist with current track on top
      store.dispatch(_actionCreators.default.updatePlaylist([currentTrack, ...withoutCurrent]));
      store.dispatch(_actionCreators.default.changeTrack(0));
    } else {
      const newIndex = playlistUnshuffled.findIndex((track, _, __) => track.ID === currentTrack.ID);
      store.dispatch(_actionCreators.default.updatePlaylist([...playlistUnshuffled]));
      store.dispatch(_actionCreators.default.changeTrack(newIndex));
    }
  }
  return next(action);
};
var _default = exports.default = shuffler;