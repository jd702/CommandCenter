{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jelan\\\\Downloads\\\\stream-ui\\\\src\\\\pages\\\\SettingsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Grid, Button, TextField, Card, CardContent, Typography, Divider, Chip, Alert } from '@mui/material';\nimport './SettingsPage.css'; // Ensure this file exists in the src/pages directory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsPage = () => {\n  _s();\n  const [ip, setIp] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [severity, setSeverity] = useState('success');\n  const handleUpdateConfig = async () => {\n    const updatedConfig = {\n      host: ip,\n      username: username,\n      password: password\n    };\n    try {\n      const response = await fetch('http://localhost:5000/ssh-connect', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedConfig)\n      });\n      const result = await response.json();\n      setMessage(result.message);\n      setSeverity(result.status === 'success' ? 'success' : 'error');\n    } catch (error) {\n      setMessage('Error connecting to the server');\n      setSeverity('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 0,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    style: {\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        minWidth: 800,\n        mb: 4\n      },\n      style: {\n        backgroundColor: '#026ca0'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          component: \"div\",\n          align: \"center\",\n          sx: {\n            color: 'white',\n            fontSize: 60,\n            mt: 4,\n            textTransform: 'uppercase',\n            height: 80\n          },\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            label: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"IP Address\",\n            variant: \"outlined\",\n            value: ip,\n            onChange: e => setIp(e.target.value),\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Username\",\n            variant: \"outlined\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Password\",\n            variant: \"outlined\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleUpdateConfig,\n            sx: {\n              mt: 2\n            },\n            children: \"Update Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: severity,\n          sx: {\n            mt: 2\n          },\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsPage, \"PKfP4b9xN2UfMmdaqgNYOWw6UBA=\");\n_c = SettingsPage;\nexport default SettingsPage;\nvar _c;\n$RefreshReg$(_c, \"SettingsPage\");","map":{"version":3,"names":["React","useState","Box","Grid","Button","TextField","Card","CardContent","Typography","Divider","Chip","Alert","jsxDEV","_jsxDEV","SettingsPage","_s","ip","setIp","username","setUsername","password","setPassword","message","setMessage","severity","setSeverity","handleUpdateConfig","updatedConfig","host","response","fetch","method","headers","body","JSON","stringify","result","json","status","error","container","spacing","direction","alignItems","justify","style","minHeight","children","sx","minWidth","mb","backgroundColor","gutterBottom","component","align","color","fontSize","mt","textTransform","height","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","variant","value","onChange","e","target","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jelan/Downloads/stream-ui/src/pages/SettingsPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Divider,\r\n  Chip,\r\n  Alert,\r\n} from '@mui/material';\r\nimport './SettingsPage.css'; // Ensure this file exists in the src/pages directory\r\n\r\nconst SettingsPage = () => {\r\n  const [ip, setIp] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [severity, setSeverity] = useState('success');\r\n\r\n  const handleUpdateConfig = async () => {\r\n    const updatedConfig = {\r\n      host: ip,\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/ssh-connect', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updatedConfig),\r\n      });\r\n\r\n      const result = await response.json();\r\n      setMessage(result.message);\r\n      setSeverity(result.status === 'success' ? 'success' : 'error');\r\n    } catch (error) {\r\n      setMessage('Error connecting to the server');\r\n      setSeverity('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={0}\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ minHeight: '100vh' }}\r\n    >\r\n      <Card sx={{ minWidth: 800, mb: 4 }} style={{ backgroundColor: '#026ca0' }}>\r\n        <CardContent>\r\n          <Typography gutterBottom component=\"div\" align=\"center\" sx={{ color: 'white', fontSize: 60, mt: 4, textTransform: 'uppercase', height: 80 }}>\r\n            Settings\r\n          </Typography>\r\n          <Divider><Chip label=\".\" /></Divider>\r\n          <Box component=\"form\" sx={{ mt: 3 }}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"IP Address\"\r\n              variant=\"outlined\"\r\n              value={ip}\r\n              onChange={(e) => setIp(e.target.value)}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Username\"\r\n              variant=\"outlined\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUpdateConfig}\r\n              sx={{ mt: 2 }}\r\n            >\r\n              Update Configuration\r\n            </Button>\r\n          </Box>\r\n          {message && (\r\n            <Alert severity={severity} sx={{ mt: 2 }}>\r\n              {message}\r\n            </Alert>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}