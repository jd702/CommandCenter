{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jelan\\\\Downloads\\\\stream-ui\\\\src\\\\pages\\\\Tasking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Tasking.css'; // Import the specific CSS for Tasking component\nimport { Button, TextField, Container, Typography, Box, Switch as MuiSwitch, CircularProgress, Accordion, AccordionSummary, AccordionDetails, MenuItem, Select, InputLabel, FormControl } from '@mui/material';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StatusIndicator = ({\n  status\n}) => /*#__PURE__*/_jsxDEV(\"span\", {\n  style: {\n    width: '20px',\n    height: '20px',\n    borderRadius: '50%',\n    display: 'inline-block',\n    marginLeft: '10px',\n    backgroundColor: status === 'online' ? 'green' : 'red'\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 5\n}, this);\n_c = StatusIndicator;\nStatusIndicator.propTypes = {\n  status: PropTypes.oneOf(['online', 'offline']).isRequired\n};\nconst predefinedCommands = {\n  jackal: ['jackal go to location 1', 'jackal return to base'],\n  husky: ['husky go to location 1', 'husky charge battery'],\n  sensor1: ['Start audio capture'],\n  sensor2: ['Start recording']\n};\nconst Tasking = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  const [command, setCommand] = useState('');\n  const [output, setOutput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [commands, setCommands] = useState({\n    jackal: [],\n    husky: [],\n    sensor1: [],\n    sensor2: []\n  });\n  const [serverStatus, setServerStatus] = useState('offline');\n  const [robotStatus, setRobotStatus] = useState({\n    jackal: 'offline',\n    husky: 'offline',\n    sensor1: 'offline',\n    sensor2: 'offline'\n  });\n  const [selectedRobot, setSelectedRobot] = useState('jackal');\n  const [selectedCommand, setSelectedCommand] = useState('');\n  const theme = createTheme({\n    palette: {\n      mode: darkMode ? 'dark' : 'light'\n    }\n  });\n  const handleInputChange = e => {\n    setCommand(e.target.value);\n  };\n  const handleRobotSelectChange = e => {\n    setSelectedRobot(e.target.value);\n    setSelectedCommand('');\n    setCommand('');\n  };\n  const handleCommandSelectChange = e => {\n    const command = e.target.value;\n    setSelectedCommand(command);\n    setCommand(command);\n  };\n  const updateCommandList = (robot, command) => {\n    setCommands(prevCommands => ({\n      ...prevCommands,\n      [robot]: [...prevCommands[robot], command]\n    }));\n  };\n  const handleSubmit = async () => {\n    if (command.trim()) {\n      setIsLoading(true);\n      try {\n        const response = await fetch('192.168.1.127:5000/command', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            command\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`Server responded with ${response.status}: ${response.statusText}`);\n        }\n        const result = await response.json();\n        setOutput(result.message);\n        updateCommandList(selectedRobot, command);\n        setRobotStatus({\n          ...robotStatus,\n          [result.robot]: result.status\n        });\n        toast.success('Command sent successfully!');\n      } catch (error) {\n        console.error('Error sending command:', error);\n        toast.error(`Error: Could not send command to the server. ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n      setCommand('');\n      setSelectedCommand('');\n    } else {\n      toast.error('Please enter a command.');\n    }\n  };\n  const checkServerStatus = async () => {\n    try {\n      const response = await fetch('192.168.1.127:5000/command');\n      if (response.ok) {\n        setServerStatus('online');\n      } else {\n        setServerStatus('offline');\n      }\n    } catch (error) {\n      console.error('Error checking server status:', error);\n      setServerStatus('offline');\n    }\n  };\n  useEffect(() => {\n    const statusInterval = setInterval(checkServerStatus, 5000);\n    return () => clearInterval(statusInterval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Mission Control Center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginBottom: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Dark Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MuiSwitch, {\n          checked: darkMode,\n          onChange: () => setDarkMode(!darkMode)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Select Robot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedRobot,\n          onChange: handleRobotSelectChange,\n          label: \"Select Robot\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"jackal\",\n            children: \"Jackal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"husky\",\n            children: \"Husky\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"sensor1\",\n            children: \"Sensor 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"sensor2\",\n            children: \"Sensor 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Select Command\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedCommand,\n          onChange: handleCommandSelectChange,\n          label: \"Select Command\",\n          children: predefinedCommands[selectedRobot].map((cmd, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: cmd,\n            children: cmd\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Enter Command\",\n        variant: \"outlined\",\n        value: command,\n        onChange: handleInputChange,\n        placeholder: \"Enter command e.g., 'jackal go to location 1'\",\n        style: {\n          marginBottom: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSubmit,\n        style: {\n          marginBottom: '20px'\n        },\n        children: \"Submit Command\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"command-list\",\n        style: {\n          marginTop: '20px',\n          padding: '10px',\n          border: '1px solid #ccc',\n          backgroundColor: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Command List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), ['jackal', 'husky', 'sensor1', 'sensor2'].map(robot => /*#__PURE__*/_jsxDEV(Accordion, {\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 59\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: robot.charAt(0).toUpperCase() + robot.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: commands[robot].map((cmd, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [cmd, \" - \", /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date().toLocaleTimeString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n                  status: robotStatus[robot]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this)]\n        }, robot, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Server Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), serverStatus === 'checking' ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(StatusIndicator, {\n          status: serverStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          style: {\n            marginLeft: '10px'\n          },\n          children: serverStatus === 'online' ? 'Server is online' : 'Server is offline'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Robot Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Jackal: \", /*#__PURE__*/_jsxDEV(StatusIndicator, {\n            status: robotStatus.jackal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 33\n          }, this), \"Husky: \", /*#__PURE__*/_jsxDEV(StatusIndicator, {\n            status: robotStatus.husky\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 32\n          }, this), \"Sensor 1: \", /*#__PURE__*/_jsxDEV(StatusIndicator, {\n            status: robotStatus.sensor1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 35\n          }, this), \"Sensor 2: \", /*#__PURE__*/_jsxDEV(StatusIndicator, {\n            status: robotStatus.sensor2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n};\n_s(Tasking, \"qZacu+nEQbjvS2bmavGjv6DKI8U=\");\n_c2 = Tasking;\nexport default Tasking;\nvar _c, _c2;\n$RefreshReg$(_c, \"StatusIndicator\");\n$RefreshReg$(_c2, \"Tasking\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","Container","Typography","Box","Switch","MuiSwitch","CircularProgress","Accordion","AccordionSummary","AccordionDetails","MenuItem","Select","InputLabel","FormControl","toast","ToastContainer","PropTypes","createTheme","ThemeProvider","ExpandMoreIcon","jsxDEV","_jsxDEV","StatusIndicator","status","style","width","height","borderRadius","display","marginLeft","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","oneOf","isRequired","predefinedCommands","jackal","husky","sensor1","sensor2","Tasking","_s","darkMode","setDarkMode","command","setCommand","output","setOutput","isLoading","setIsLoading","commands","setCommands","serverStatus","setServerStatus","robotStatus","setRobotStatus","selectedRobot","setSelectedRobot","selectedCommand","setSelectedCommand","theme","palette","mode","handleInputChange","e","target","value","handleRobotSelectChange","handleCommandSelectChange","updateCommandList","robot","prevCommands","handleSubmit","trim","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","result","json","message","success","error","console","checkServerStatus","statusInterval","setInterval","clearInterval","children","maxWidth","marginTop","variant","gutterBottom","alignItems","justifyContent","marginBottom","checked","onChange","fullWidth","label","map","cmd","index","placeholder","color","onClick","className","padding","border","expandIcon","charAt","toUpperCase","slice","Date","toLocaleTimeString","size","_c2","$RefreshReg$"],"sources":["C:/Users/jelan/Downloads/stream-ui/src/pages/Tasking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Tasking.css'; // Import the specific CSS for Tasking component\r\nimport { Button, TextField, Container, Typography, Box, Switch as MuiSwitch, CircularProgress, Accordion, AccordionSummary, AccordionDetails, MenuItem, Select, InputLabel, FormControl } from '@mui/material';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nexport const StatusIndicator = ({ status }) => (\r\n    <span\r\n        style={{\r\n            width: '20px',\r\n            height: '20px',\r\n            borderRadius: '50%',\r\n            display: 'inline-block',\r\n            marginLeft: '10px',\r\n            backgroundColor: status === 'online' ? 'green' : 'red',\r\n        }}\r\n    />\r\n);\r\n\r\nStatusIndicator.propTypes = {\r\n    status: PropTypes.oneOf(['online', 'offline']).isRequired,\r\n};\r\n\r\nconst predefinedCommands = {\r\n    jackal: ['jackal go to location 1', 'jackal return to base'],\r\n    husky: ['husky go to location 1', 'husky charge battery'],\r\n    sensor1: ['Start audio capture'],\r\n    sensor2: ['Start recording'],\r\n};\r\n\r\nconst Tasking = () => {\r\n    const [darkMode, setDarkMode] = useState(false);\r\n    const [command, setCommand] = useState('');\r\n    const [output, setOutput] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [commands, setCommands] = useState({\r\n        jackal: [],\r\n        husky: [],\r\n        sensor1: [],\r\n        sensor2: [],\r\n    });\r\n    const [serverStatus, setServerStatus] = useState('offline');\r\n    const [robotStatus, setRobotStatus] = useState({\r\n        jackal: 'offline',\r\n        husky: 'offline',\r\n        sensor1: 'offline',\r\n        sensor2: 'offline',\r\n    });\r\n    const [selectedRobot, setSelectedRobot] = useState('jackal');\r\n    const [selectedCommand, setSelectedCommand] = useState('');\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: darkMode ? 'dark' : 'light',\r\n        },\r\n    });\r\n\r\n    const handleInputChange = (e) => {\r\n        setCommand(e.target.value);\r\n    };\r\n\r\n    const handleRobotSelectChange = (e) => {\r\n        setSelectedRobot(e.target.value);\r\n        setSelectedCommand('');\r\n        setCommand('');\r\n    };\r\n\r\n    const handleCommandSelectChange = (e) => {\r\n        const command = e.target.value;\r\n        setSelectedCommand(command);\r\n        setCommand(command);\r\n    };\r\n\r\n    const updateCommandList = (robot, command) => {\r\n        setCommands((prevCommands) => ({\r\n            ...prevCommands,\r\n            [robot]: [...prevCommands[robot], command],\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        if (command.trim()) {\r\n            setIsLoading(true);\r\n            try {\r\n                const response = await fetch('192.168.1.127:5000/command', { \r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ command }),\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Server responded with ${response.status}: ${response.statusText}`);\r\n                }\r\n\r\n                const result = await response.json();\r\n                setOutput(result.message);\r\n                updateCommandList(selectedRobot, command);\r\n                setRobotStatus({\r\n                    ...robotStatus,\r\n                    [result.robot]: result.status,\r\n                });\r\n                toast.success('Command sent successfully!');\r\n            } catch (error) {\r\n                console.error('Error sending command:', error);\r\n                toast.error(`Error: Could not send command to the server. ${error.message}`);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n            setCommand('');\r\n            setSelectedCommand('');\r\n        } else {\r\n            toast.error('Please enter a command.');\r\n        }\r\n    };\r\n\r\n    const checkServerStatus = async () => {\r\n        try {\r\n            const response = await fetch('192.168.1.127:5000/command');\r\n            if (response.ok) {\r\n                setServerStatus('online');\r\n            } else {\r\n                setServerStatus('offline');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error checking server status:', error);\r\n            setServerStatus('offline');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const statusInterval = setInterval(checkServerStatus, 5000);\r\n        return () => clearInterval(statusInterval);\r\n    }, []);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container maxWidth=\"md\" style={{ marginTop: '20px' }}>\r\n                <ToastContainer />\r\n\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Mission Control Center\r\n                </Typography>\r\n\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" marginBottom={2}>\r\n                    <Typography variant=\"body1\">Dark Mode</Typography>\r\n                    <MuiSwitch checked={darkMode} onChange={() => setDarkMode(!darkMode)} />\r\n                </Box>\r\n\r\n                <FormControl fullWidth style={{ marginBottom: '20px' }}>\r\n                    <InputLabel>Select Robot</InputLabel>\r\n                    <Select value={selectedRobot} onChange={handleRobotSelectChange} label=\"Select Robot\">\r\n                        <MenuItem value=\"jackal\">Jackal</MenuItem>\r\n                        <MenuItem value=\"husky\">Husky</MenuItem>\r\n                        <MenuItem value=\"sensor1\">Sensor 1</MenuItem>\r\n                        <MenuItem value=\"sensor2\">Sensor 2</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <FormControl fullWidth style={{ marginBottom: '20px' }}>\r\n                    <InputLabel>Select Command</InputLabel>\r\n                    <Select value={selectedCommand} onChange={handleCommandSelectChange} label=\"Select Command\">\r\n                        {predefinedCommands[selectedRobot].map((cmd, index) => (\r\n                            <MenuItem key={index} value={cmd}>\r\n                                {cmd}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Enter Command\"\r\n                    variant=\"outlined\"\r\n                    value={command}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Enter command e.g., 'jackal go to location 1'\"\r\n                    style={{ marginBottom: '20px' }}\r\n                />\r\n\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} style={{ marginBottom: '20px' }}>\r\n                    Submit Command\r\n                </Button>\r\n\r\n                <Box>\r\n                    {isLoading ? (\r\n                        <CircularProgress />\r\n                    ) : (\r\n                        <Typography variant=\"h6\">{output}</Typography>\r\n                    )}\r\n                </Box>\r\n\r\n                <Box\r\n                    className=\"command-list\"\r\n                    style={{\r\n                        marginTop: '20px',\r\n                        padding: '10px',\r\n                        border: '1px solid #ccc',\r\n                        backgroundColor: '#f9f9f9',\r\n                    }}\r\n                >\r\n                    <Typography variant=\"h6\">Command List</Typography>\r\n                    {['jackal', 'husky', 'sensor1', 'sensor2'].map((robot) => (\r\n                        <Accordion key={robot}>\r\n                            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                                <Typography variant=\"body1\">\r\n                                    <strong>{robot.charAt(0).toUpperCase() + robot.slice(1)}</strong>\r\n                                </Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                                <ul>\r\n                                    {commands[robot].map((cmd, index) => (\r\n                                        <li key={index}>\r\n                                            {cmd} - <small>{new Date().toLocaleTimeString()}</small>\r\n                                            <StatusIndicator status={robotStatus[robot]} />\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    ))}\r\n                </Box>\r\n\r\n                <Box style={{ marginTop: '20px' }}>\r\n                    <Typography variant=\"body1\">\r\n                        <strong>Server Status:</strong>\r\n                    </Typography>\r\n                    {serverStatus === 'checking' ? (\r\n                        <CircularProgress size={20} />\r\n                    ) : (\r\n                        <StatusIndicator status={serverStatus} />\r\n                    )}\r\n                    <Typography variant=\"body2\" style={{ marginLeft: '10px' }}>\r\n                        {serverStatus === 'online' ? 'Server is online' : 'Server is offline'}\r\n                    </Typography>\r\n                </Box>\r\n\r\n                <Box style={{ marginTop: '10px' }}>\r\n                    <Typography variant=\"body1\">\r\n                        <strong>Robot Status:</strong>\r\n                    </Typography>\r\n                    <div>\r\n                        Jackal: <StatusIndicator status={robotStatus.jackal} />\r\n                        Husky: <StatusIndicator status={robotStatus.husky} />\r\n                        Sensor 1: <StatusIndicator status={robotStatus.sensor1} />\r\n                        Sensor 2: <StatusIndicator status={robotStatus.sensor2} />\r\n                    </div>\r\n                </Box>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default Tasking;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}